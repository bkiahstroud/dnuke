#!/usr/bin/env ruby

# TODO: make sure no matching containers are
#       running before attempting removal
def remove_containers(args)
  containers = `docker ps -aqf name=#{args}` # String
  containers = containers.split(/\n/) # Array
  unless containers.empty?
    puts ">>> removing containers that match: #{args}"
    containers.map do |c|
      `docker container rm #{c}`
      if `docker ps -aqf id=#{c}`.length > 0
        puts ">>> there was an issue removing container #{c}"
      else
        puts ">>> container #{c} was removed"
      end
    end
  else
    puts ">>> NO CONTAINERS REMOVED: no containers match #{args}"
  end
end

def remove_volumes(args)
  volumes = `docker volume ls` # String
  volumes = volumes.squeeze(' ').chop
  volumes = volumes.split(/\nlocal /) # Array
  volumes = volumes.map do |v|
    if v.match(args)
      v
    end
  end
  volumes = volumes.compact # remove any lingering nil values
  unless volumes.empty?
    puts ">>> removing volumes that match: #{args}"
    volumes.map do |v|
      `docker volume rm #{v}`
      if `docker volume ls`.match(v)
        puts ">>> there was an issue removing volume #{v}"
      else
        puts ">>> volume #{v} was removed"
      end
    end
  else
    puts ">>> NO VOLUMES REMOVED: no volumes match #{args}"
  end
end

unless ARGV.length == 0
  ARGV.each do |value|
    puts "\n"
    puts "I, the mighty " + File.basename(__FILE__) + ", was passed: " + value
    puts "\n"
    remove_containers(value)
    puts "\n"
    remove_volumes(value)
    puts "\n--------------------------------------------------------------------"
  end
else
  puts "Please pass an argument"
end
